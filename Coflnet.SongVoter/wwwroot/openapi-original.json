{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "support@coflnet.com"
    },
    "description" : "Definition for songvoter API",
    "license" : {
      "name" : "AGPL",
      "url" : "https://github.com/Coflnet/song-voter/blob/main/LICENSE"
    },
    "termsOfService" : "https://coflnet.com/terms/",
    "title" : "Songvoter",
    "version" : "0.0.1"
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "servers" : [ {
    "url" : "https://songvoter.coflnet.com/v1"
  } ],
  "tags" : [ {
    "description" : "Everything about Songs",
    "externalDocs" : {
      "url" : "http://swagger.io"
    },
    "name" : "song"
  }, {
    "description" : "Manage a playlist",
    "name" : "list"
  } ],
  "paths" : {
    "/songs" : {
      "post" : {
        "operationId" : "addSong",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SongCreation"
              }
            }
          },
          "description" : "Pet object that needs to be added to the store",
          "required" : true
        },
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Add a new song by url",
        "tags" : [ "song" ]
      }
    },
    "/songs/search" : {
      "get" : {
        "operationId" : "findSong",
        "parameters" : [ {
          "description" : "Search term to serach for",
          "explode" : true,
          "in" : "query",
          "name" : "term",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Song"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid search term"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Finds Song by search term",
        "tags" : [ "song" ]
      }
    },
    "/song/{songId}" : {
      "get" : {
        "description" : "Returns a single song",
        "operationId" : "getSongById",
        "parameters" : [ {
          "description" : "ID of song to return",
          "explode" : false,
          "in" : "path",
          "name" : "songId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Song"
                }
              }
            },
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Song not found"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Find song by ID",
        "tags" : [ "song" ]
      }
    },
    "/lists" : {
      "get" : {
        "operationId" : "getPlaylists",
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PlayList"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "successful response"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Get playlist for active user",
        "tags" : [ "list" ]
      },
      "post" : {
        "operationId" : "createPlaylist",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlayList"
              }
            }
          },
          "description" : "An array of songIds to be added to the song",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlayList"
                }
              }
            },
            "description" : "successful created list"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Create a new playlist",
        "tags" : [ "list" ]
      }
    },
    "/lists/{listId}" : {
      "get" : {
        "description" : "Returns a playList",
        "operationId" : "getListById",
        "parameters" : [ {
          "description" : "ID of list to return",
          "explode" : false,
          "in" : "path",
          "name" : "listId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlayList"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Find playlist by ID",
        "tags" : [ "list" ]
      }
    },
    "/auth/google" : {
      "post" : {
        "description" : "Exchange a google identity token for a songvoter token",
        "operationId" : "authWithGoogle",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthToken"
              }
            }
          },
          "description" : "The google identity token",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthToken"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "summary" : "Authenticate with google",
        "tags" : [ "auth" ]
      }
    },
    "/partys" : {
      "get" : {
        "operationId" : "getParties",
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Party"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "successful created"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Returns all parties of the curent user",
        "tags" : [ "party" ]
      },
      "post" : {
        "operationId" : "createParty",
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Party"
                }
              }
            },
            "description" : "successful created"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Creates a new party",
        "tags" : [ "party" ]
      }
    },
    "/party/{partyId}/join" : {
      "post" : {
        "operationId" : "joinParty",
        "parameters" : [ {
          "description" : "ID of party to join",
          "explode" : false,
          "in" : "path",
          "name" : "partyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "201" : {
            "description" : "joined successfully"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Joins a party",
        "tags" : [ "party" ]
      }
    },
    "/party/{partyId}/leave" : {
      "post" : {
        "operationId" : "leaveParty",
        "parameters" : [ {
          "description" : "ID of party to leave",
          "explode" : false,
          "in" : "path",
          "name" : "partyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "201" : {
            "description" : "left successfully"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Leave a party",
        "tags" : [ "party" ]
      }
    },
    "/party/{partyId}/kick/{userId}" : {
      "post" : {
        "operationId" : "kickFromParty",
        "parameters" : [ {
          "description" : "ID of party to leave",
          "explode" : false,
          "in" : "path",
          "name" : "partyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID of user to kick",
          "explode" : false,
          "in" : "path",
          "name" : "userId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "201" : {
            "description" : "left successfully"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "kicks a user from a party",
        "tags" : [ "party" ]
      }
    },
    "/party/{partyId}/invite/{userId}" : {
      "post" : {
        "operationId" : "inviteToParty",
        "parameters" : [ {
          "description" : "ID of party to invite to",
          "explode" : false,
          "in" : "path",
          "name" : "partyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID of user to invite",
          "explode" : false,
          "in" : "path",
          "name" : "userId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "201" : {
            "description" : "invite sent"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Invites a user to a party",
        "tags" : [ "party" ]
      }
    },
    "/party/{partyId}/inviteLink" : {
      "get" : {
        "operationId" : "createInviteLink",
        "parameters" : [ {
          "description" : "ID of party to invite to",
          "explode" : false,
          "in" : "path",
          "name" : "partyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "example" : "https://songvoter.party/invite/linkIdtoForward",
                  "type" : "string"
                }
              }
            },
            "description" : "invite link created"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "Creates an invite link for a party",
        "tags" : [ "party" ]
      }
    },
    "/party/{partyId}/nextSong" : {
      "get" : {
        "operationId" : "nextSong",
        "parameters" : [ {
          "description" : "ID of party",
          "explode" : false,
          "in" : "path",
          "name" : "partyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Song"
                }
              }
            },
            "description" : "invite created"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "gets the next Song",
        "tags" : [ "party" ]
      }
    },
    "/party/{partyId}/reset" : {
      "post" : {
        "operationId" : "resetParty",
        "parameters" : [ {
          "description" : "ID of party to invite to",
          "explode" : false,
          "in" : "path",
          "name" : "partyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "reset party"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "resets the parties playing state",
        "tags" : [ "party" ]
      }
    },
    "/party/{partyId}/upvote/{songId}" : {
      "post" : {
        "description" : "Adds an upvote to an song wich causes it to be played sooner. Also adds new songs to a party",
        "operationId" : "upvoteSong",
        "parameters" : [ {
          "description" : "ID of party",
          "explode" : false,
          "in" : "path",
          "name" : "partyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID of the song to upvote",
          "explode" : false,
          "in" : "path",
          "name" : "songId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "upvoted"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "votes a song up so it is play sooner",
        "tags" : [ "party" ]
      }
    },
    "/party/{partyId}/downvote/{songId}" : {
      "post" : {
        "operationId" : "downvoteSong",
        "parameters" : [ {
          "description" : "ID of party",
          "explode" : false,
          "in" : "path",
          "name" : "partyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID of the song",
          "explode" : false,
          "in" : "path",
          "name" : "songId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "downvote accepted"
          }
        },
        "security" : [ {
          "jwt" : [ ]
        } ],
        "summary" : "votes a song down so it is play later/not at all",
        "tags" : [ "party" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ExternalSong" : {
        "example" : {
          "thumbnail" : "https://i.ytimg.com/vi/bESGLojNYSo/hq720.jpg",
          "artist" : "Lady Gaga",
          "externalId" : "bESGLojNYSo",
          "title" : "Lady Gaga - Poker Face (Official Music Video)",
          "platform" : "youtube"
        },
        "properties" : {
          "title" : {
            "example" : "Lady Gaga - Poker Face (Official Music Video)",
            "type" : "string"
          },
          "artist" : {
            "example" : "Lady Gaga",
            "type" : "string"
          },
          "thumbnail" : {
            "example" : "https://i.ytimg.com/vi/bESGLojNYSo/hq720.jpg",
            "type" : "string"
          },
          "externalId" : {
            "example" : "bESGLojNYSo",
            "type" : "string"
          },
          "platform" : {
            "description" : "The platform of this song",
            "enum" : [ "youtube", "spotify" ],
            "type" : "string"
          }
        },
        "required" : [ "externalId", "platform" ],
        "type" : "object",
        "xml" : {
          "name" : "Tag"
        }
      },
      "Song" : {
        "example" : {
          "id" : "id",
          "occurences" : [ {
            "thumbnail" : "https://i.ytimg.com/vi/bESGLojNYSo/hq720.jpg",
            "artist" : "Lady Gaga",
            "externalId" : "bESGLojNYSo",
            "title" : "Lady Gaga - Poker Face (Official Music Video)",
            "platform" : "youtube"
          }, {
            "thumbnail" : "https://i.ytimg.com/vi/bESGLojNYSo/hq720.jpg",
            "artist" : "Lady Gaga",
            "externalId" : "bESGLojNYSo",
            "title" : "Lady Gaga - Poker Face (Official Music Video)",
            "platform" : "youtube"
          } ],
          "title" : "Lady Gaga - Poker Face (Official Music Video)"
        },
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "title" : {
            "example" : "Lady Gaga - Poker Face (Official Music Video)",
            "type" : "string"
          },
          "occurences" : {
            "items" : {
              "$ref" : "#/components/schemas/ExternalSong"
            },
            "type" : "array"
          }
        },
        "required" : [ "song" ],
        "type" : "object"
      },
      "SongCreation" : {
        "example" : {
          "externalId" : "bESGLojNYSo",
          "platform" : "youtube"
        },
        "properties" : {
          "externalId" : {
            "example" : "bESGLojNYSo",
            "type" : "string"
          },
          "platform" : {
            "description" : "The platform of this song",
            "enum" : [ "youtube", "spotify" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PlayList" : {
        "example" : {
          "songs" : [ "songs", "songs" ],
          "id" : "dfINx",
          "title" : "My playlist"
        },
        "properties" : {
          "id" : {
            "example" : "dfINx",
            "type" : "string"
          },
          "title" : {
            "example" : "My playlist",
            "type" : "string"
          },
          "songs" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "AuthToken" : {
        "example" : {
          "token" : "ey..."
        },
        "properties" : {
          "token" : {
            "example" : "ey...",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Party" : {
        "example" : {
          "members" : [ "members", "members" ],
          "name" : "Birthday",
          "id" : "22fed76bbf8e4f8d93f8eb204ea42167"
        },
        "properties" : {
          "id" : {
            "example" : "22fed76bbf8e4f8d93f8eb204ea42167",
            "type" : "string"
          },
          "name" : {
            "example" : "Birthday",
            "type" : "string"
          },
          "members" : {
            "items" : {
              "description" : "userIds",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ApiResponse" : {
        "properties" : {
          "code" : {
            "format" : "int32",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "jwt" : {
        "bearerFormat" : "JWT",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}
