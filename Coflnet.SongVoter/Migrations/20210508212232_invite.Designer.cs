// <auto-generated />
using System;
using Coflnet.SongVoter.DBModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Coflnet.SongVoter.Migrations
{
    [DbContext(typeof(SVContext))]
    [Migration("20210508212232_invite")]
    partial class invite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.ExternalSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Artist")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ExternalId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<int?>("SongId")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.ToTable("ExternalSongs");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.Invite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("PartyId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.HasIndex("UserId");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.PartySong", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<short>("PlayedTimes")
                        .HasColumnType("smallint");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.HasIndex("SongId");

                    b.ToTable("PartySongs");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Owner")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("PlayLists");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GoogleId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PartySongUser", b =>
                {
                    b.Property<int>("DownVotersId")
                        .HasColumnType("int");

                    b.Property<long>("DownvotesId")
                        .HasColumnType("bigint");

                    b.HasKey("DownVotersId", "DownvotesId");

                    b.HasIndex("DownvotesId");

                    b.ToTable("PartySongUser");
                });

            modelBuilder.Entity("PartySongUser1", b =>
                {
                    b.Property<int>("UpVotersId")
                        .HasColumnType("int");

                    b.Property<long>("UpvotesId")
                        .HasColumnType("bigint");

                    b.HasKey("UpVotersId", "UpvotesId");

                    b.HasIndex("UpvotesId");

                    b.ToTable("PartySongUser1");
                });

            modelBuilder.Entity("PartyUser", b =>
                {
                    b.Property<int>("MembersId")
                        .HasColumnType("int");

                    b.Property<int>("PartiesId")
                        .HasColumnType("int");

                    b.HasKey("MembersId", "PartiesId");

                    b.HasIndex("PartiesId");

                    b.ToTable("PartyUser");
                });

            modelBuilder.Entity("PlaylistSong", b =>
                {
                    b.Property<int>("PlaylistsId")
                        .HasColumnType("int");

                    b.Property<int>("SongsId")
                        .HasColumnType("int");

                    b.HasKey("PlaylistsId", "SongsId");

                    b.HasIndex("SongsId");

                    b.ToTable("PlaylistSong");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.ExternalSong", b =>
                {
                    b.HasOne("Coflnet.SongVoter.DBModels.Song", null)
                        .WithMany("ExternalSongs")
                        .HasForeignKey("SongId");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.Invite", b =>
                {
                    b.HasOne("Coflnet.SongVoter.DBModels.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId");

                    b.HasOne("Coflnet.SongVoter.DBModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Party");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.Party", b =>
                {
                    b.HasOne("Coflnet.SongVoter.DBModels.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.PartySong", b =>
                {
                    b.HasOne("Coflnet.SongVoter.DBModels.Party", "Party")
                        .WithMany("Songs")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coflnet.SongVoter.DBModels.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("PartySongUser", b =>
                {
                    b.HasOne("Coflnet.SongVoter.DBModels.User", null)
                        .WithMany()
                        .HasForeignKey("DownVotersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coflnet.SongVoter.DBModels.PartySong", null)
                        .WithMany()
                        .HasForeignKey("DownvotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PartySongUser1", b =>
                {
                    b.HasOne("Coflnet.SongVoter.DBModels.User", null)
                        .WithMany()
                        .HasForeignKey("UpVotersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coflnet.SongVoter.DBModels.PartySong", null)
                        .WithMany()
                        .HasForeignKey("UpvotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PartyUser", b =>
                {
                    b.HasOne("Coflnet.SongVoter.DBModels.User", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coflnet.SongVoter.DBModels.Party", null)
                        .WithMany()
                        .HasForeignKey("PartiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlaylistSong", b =>
                {
                    b.HasOne("Coflnet.SongVoter.DBModels.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coflnet.SongVoter.DBModels.Song", null)
                        .WithMany()
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.Party", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Coflnet.SongVoter.DBModels.Song", b =>
                {
                    b.Navigation("ExternalSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
