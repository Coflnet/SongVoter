/*
 * Songvoter
 *
 * Definition for songvoter API
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@coflnet.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Microsoft.AspNetCore.Authorization;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using .Attributes;
using .Models;

namespace .Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ListApiController : ControllerBase
    { 
        /// <summary>
        /// Create a new playlist
        /// </summary>
        /// <param name="body">An array of songIds to be added to the song</param>
        /// <response code="200">successful created list</response>
        [HttpPost]
        [Route("/v1/lists")]
        [ValidateModelState]
        [SwaggerOperation("CreatePlaylist")]
        [SwaggerResponse(statusCode: 200, type: typeof(PlayList), description: "successful created list")]
        public virtual IActionResult CreatePlaylist([FromBody]PlayList body)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PlayList));
            string exampleJson = null;
            exampleJson = "{\n  \"songs\" : [ 0, 0 ],\n  \"id\" : 43873,\n  \"title\" : \"My playlist\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PlayList>(exampleJson)
            : default(PlayList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Find playlist by ID
        /// </summary>
        /// <remarks>Returns a playList</remarks>
        /// <param name="listId">ID of list to return</param>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/v1/lists/{listId}")]
        [ValidateModelState]
        [SwaggerOperation("GetListById")]
        [SwaggerResponse(statusCode: 200, type: typeof(PlayList), description: "successful operation")]
        public virtual IActionResult GetListById([FromRoute (Name = "listId")][Required]long listId)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PlayList));
            string exampleJson = null;
            exampleJson = "{\n  \"songs\" : [ 0, 0 ],\n  \"id\" : 43873,\n  \"title\" : \"My playlist\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PlayList>(exampleJson)
            : default(PlayList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get playlist for active user
        /// </summary>
        /// <response code="200">successful response</response>
        [HttpGet]
        [Route("/v1/lists")]
        [ValidateModelState]
        [SwaggerOperation("GetPlaylists")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<PlayList>), description: "successful response")]
        public virtual IActionResult GetPlaylists()
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PlayList>));
            string exampleJson = null;
            exampleJson = "{\n  \"songs\" : [ 0, 0 ],\n  \"id\" : 43873,\n  \"title\" : \"My playlist\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<PlayList>>(exampleJson)
            : default(List<PlayList>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
